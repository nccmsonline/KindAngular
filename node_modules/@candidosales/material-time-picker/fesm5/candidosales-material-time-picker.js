import { Component, Input, Output, EventEmitter, Inject, NgModule } from '@angular/core';
import { MAT_DIALOG_DATA, MatDialogRef, MatDialog, MatButtonModule, MatButtonToggleModule, MatDialogModule, MatFormFieldModule, MatIconModule, MatInputModule, MatSelectModule, MatToolbarModule } from '@angular/material';
import { CommonModule } from '@angular/common';
import { FlexLayoutModule } from '@angular/flex-layout';
import { FormsModule } from '@angular/forms';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
/** @enum {number} */
var CLOCK_TYPE = {
    HOURS: 1,
    MINUTES: 2,
};
CLOCK_TYPE[CLOCK_TYPE.HOURS] = 'HOURS';
CLOCK_TYPE[CLOCK_TYPE.MINUTES] = 'MINUTES';
var WClockComponent = /** @class */ (function () {
    function WClockComponent() {
        this.userTimeChange = new EventEmitter();
        this.viewChange = new EventEmitter();
        this.steps = new Array();
    }
    /**
     * @return {?}
     */
    WClockComponent.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        this.setupUI();
    };
    /**
     * @return {?}
     */
    WClockComponent.prototype.setupUI = /**
     * @return {?}
     */
    function () {
        this.steps = new Array();
        switch (this.currentView) {
            case CLOCK_TYPE.HOURS:
                for (var i = 1; i <= this.userTime.format; i++) {
                    this.steps.push(i);
                    this.selectedTimePart = this.userTime.hour || 0;
                    if (this.selectedTimePart > this.userTime.format) {
                        this.selectedTimePart -= this.userTime.format;
                    }
                }
                break;
            case CLOCK_TYPE.MINUTES:
                for (var i = 5; i <= 55; i += 5) {
                    this.steps.push(i);
                }
                this.steps.push(0);
                this.selectedTimePart = this.userTime.minute || 0;
                break;
        }
    };
    /**
     * @return {?}
     */
    WClockComponent.prototype.getPointerStyle = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var divider = 1;
        switch (this.currentView) {
            case CLOCK_TYPE.HOURS:
                divider = this.userTime.format;
                break;
            case CLOCK_TYPE.MINUTES:
                divider = 60;
                break;
        }
        /** @type {?} */
        var degrees = 0;
        if (this.currentView === CLOCK_TYPE.HOURS) {
            degrees = Math.round(this.userTime.hour * (360 / divider)) - 180;
        }
        else {
            degrees = Math.round(this.userTime.minute * (360 / divider)) - 180;
        }
        /** @type {?} */
        var style = {
            '-webkit-transform': 'rotate(' + degrees + 'deg)',
            '-ms-transform': 'rotate(' + degrees + 'deg)',
            transform: 'rotate(' + degrees + 'deg)'
        };
        return style;
    };
    /**
     * @param {?} step
     * @param {?} index
     * @return {?}
     */
    WClockComponent.prototype.getTimeValueClass = /**
     * @param {?} step
     * @param {?} index
     * @return {?}
     */
    function (step, index) {
        if (this.currentView === CLOCK_TYPE.HOURS) {
            this.STEP_DEG = 360 / this.userTime.format;
        }
        else {
            this.STEP_DEG = 360 / 12;
        }
        /** @type {?} */
        var classes = 'w-clock-step w-clock-deg' + this.STEP_DEG * (index + 1);
        if (this.selectedTimePart === step) {
            classes += ' mat-primary';
        }
        return classes;
    };
    /**
     * @param {?} step
     * @return {?}
     */
    WClockComponent.prototype.changeTimeValue = /**
     * @param {?} step
     * @return {?}
     */
    function (step) {
        if (this.currentView === CLOCK_TYPE.HOURS) {
            this.userTime.hour = step;
            // auto switch to minutes
            this.viewChange.emit(CLOCK_TYPE.MINUTES);
        }
        else {
            this.userTime.minute = step;
            // auto switch to hours
            this.viewChange.emit(CLOCK_TYPE.HOURS);
        }
        this.userTimeChange.emit(this.userTime);
    };
    WClockComponent.decorators = [
        { type: Component, args: [{
                    selector: 'w-clock',
                    template: "<div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"w-clock-wrapper\">\n    <div class=\"w-clock\">\n        <div class=\"w-clock-container\">\n            \n            <!-- Clock center -->\n            <button  mat-mini-fab [color]=\"color\" class=\"w-clock-center\"></button>\n\n            <!-- Clock hand -->\n            <mat-toolbar [ngStyle]=\"getPointerStyle()\" [color]=\"color\" class=\"w-pointer\">\n                <button mat-mini-fab [color]=\"color\" class=\"w-clock-selected\"></button>\n            </mat-toolbar>\n            \n            <!-- Hour / Minute number faces -->\n            <div *ngFor=\"let step of steps; let i = index\" [class]=\"getTimeValueClass(step, i)\" >\n                <button mat-mini-fab\n                    [color]=\"selectedTimePart === step ? color : ''\"\n                    (click)=\"changeTimeValue(step)\">\n                    {{ step }}\n                </button>\n            </div>\n\n        </div>\n    </div>\n</div>",
                    styles: [".w-clock-wrapper{height:100%;padding:0 24px}.w-clock-wrapper .w-clock{width:200px;height:200px;border-radius:50%;cursor:pointer;padding:24px;background:#ededed}.w-clock-wrapper .w-clock .w-clock-container{width:100%;height:100%;position:relative;display:block}.w-clock-wrapper .w-clock .w-clock-center{height:6px;width:6px;position:absolute;left:0;right:0;top:0;bottom:0;margin:auto;border-radius:50%}.w-clock-wrapper .w-clock .w-pointer{box-shadow:none;width:1px;height:50%;position:absolute;left:0;right:0;bottom:0;margin:0 auto;padding:0;-webkit-transform-origin:top center;transform-origin:top center;transition:transform .2s;transition:transform .2s,-webkit-transform .2s;z-index:0;pointer-events:none}.w-clock-wrapper .w-clock .w-clock-step{display:block;position:absolute;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);transition:transform .2s;transition:transform .2s,-webkit-transform .2s}.w-clock-wrapper .w-clock .w-clock-step .mat-mini-fab{box-shadow:none;background-color:transparent}.w-clock-wrapper .w-clock .w-clock-selected{position:absolute;bottom:-19px;left:-19px;min-width:0;min-height:0;pointer-events:none;box-shadow:none;cursor:none}.w-clock-deg0{top:0;left:50%}.w-clock-deg15{top:1.70370869%;left:62.94095226%}.w-clock-deg30{top:6.69872981%;left:75%}.w-clock-deg45{top:14.64466094%;left:85.35533905%}.w-clock-deg60{top:25%;left:93.30127019%}.w-clock-deg75{top:37.05904774%;left:98.29629131%}.w-clock-deg90{top:50%;left:100%}.w-clock-deg105{top:62.94095226%;left:98.29629131%}.w-clock-deg120{top:75%;left:93.30127019%}.w-clock-deg135{top:85.35533906%;left:85.35533906%}.w-clock-deg150{top:93.30127019%;left:75%}.w-clock-deg165{top:98.29629131%;left:62.94095226%}.w-clock-deg180{top:100%;left:50%}.w-clock-deg195{top:98.29629131%;left:37.05904774%}.w-clock-deg210{top:93.30127019%;left:25%}.w-clock-deg225{top:85.35533906%;left:14.64466094%}.w-clock-deg240{top:75%;left:6.69872981%}.w-clock-deg255{top:62.94095226%;left:1.703708686%}.w-clock-deg270{top:50%;left:0}.w-clock-deg285{top:37.05904774%;left:1.703708686%}.w-clock-deg300{top:25%;left:6.69872981%}.w-clock-deg315{top:14.64466094%;left:14.64466094%}.w-clock-deg330{top:6.69872981%;left:25%}.w-clock-deg345{top:1.703708686%;left:37.05904774%}.w-clock-deg360{top:0;left:50%}"]
                }] }
    ];
    WClockComponent.propDecorators = {
        userTime: [{ type: Input }],
        userTimeChange: [{ type: Output }],
        currentView: [{ type: Input }],
        viewChange: [{ type: Output }],
        color: [{ type: Input }]
    };
    return WClockComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
var WTimeDialogComponent = /** @class */ (function () {
    function WTimeDialogComponent(dialogRef, data) {
        this.dialogRef = dialogRef;
        this.data = data;
        this.VIEW_HOURS = CLOCK_TYPE.HOURS;
        this.VIEW_MINUTES = CLOCK_TYPE.MINUTES;
        this.currentView = this.VIEW_HOURS;
        this.userTime = this.data.time;
        this.color = this.data.color;
    }
    /**
     * @return {?}
     */
    WTimeDialogComponent.prototype.revert = /**
     * @return {?}
     */
    function () {
        this.dialogRef.close(-1);
    };
    /**
     * @return {?}
     */
    WTimeDialogComponent.prototype.submit = /**
     * @return {?}
     */
    function () {
        this.dialogRef.close(this.userTime);
    };
    WTimeDialogComponent.decorators = [
        { type: Component, args: [{
                    template: "\n<div mat-dialog-content class=\"w-timepicker-dialog\">\n    <w-time [color]=\"color\" [userTime]=\"userTime\" (onRevert)=\"revert()\" (onSubmit)=\"submit()\" [revertLabel]=\"data.revertLabel\" [submitLabel]=\"data.submitLabel\"></w-time>\n</div>\n\n",
                    styles: [".w-timepicker-dialog{padding:0;margin:-24px;width:calc(100% + 48px)}"]
                }] }
    ];
    /** @nocollapse */
    WTimeDialogComponent.ctorParameters = function () { return [
        { type: MatDialogRef },
        { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }
    ]; };
    return WTimeDialogComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
var Utils = /** @class */ (function () {
    function Utils() {
    }
    /**
     * @param {?} format
     * @param {?} hour
     * @return {?}
     */
    Utils.formatHour = /**
     * @param {?} format
     * @param {?} hour
     * @return {?}
     */
    function (format, hour) {
        if (format === 24) {
            if (hour === 24) {
                return '00';
            }
            else if (hour < 10) {
                return '0' + String(hour);
            }
        }
        return String(hour);
    };
    /**
     * @param {?} minute
     * @return {?}
     */
    Utils.formatMinute = /**
     * @param {?} minute
     * @return {?}
     */
    function (minute) {
        if (minute === 0) {
            return '00';
        }
        else if (minute < 10) {
            return '0' + String(minute);
        }
        else {
            return String(minute);
        }
    };
    return Utils;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
var MaterialTimePickerComponent = /** @class */ (function () {
    function MaterialTimePickerComponent(dialog) {
        this.dialog = dialog;
        this.label = 'Hour';
        this.appearance = 'legacy';
        this.change = new EventEmitter();
    }
    /**
     * @return {?}
     */
    MaterialTimePickerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (!this.userTime) {
            this.userTime = {
                hour: 0,
                minute: 0,
                meriden: 'PM',
                format: 24
            };
        }
    };
    /**
     * @return {?}
     */
    MaterialTimePickerComponent.prototype.time = /**
     * @return {?}
     */
    function () {
        if (!this.userTime) {
            return '';
        }
        /** @type {?} */
        var meriden = "" + this.userTime.meriden;
        if (this.userTime.format === 24) {
            meriden = '';
        }
        /** @type {?} */
        var hour = "" + this.userTime.hour;
        if (this.userTime.hour === 24) {
            hour = '00';
        }
        if (this.userTime.minute === 0) {
            return hour + ":00 " + meriden;
        }
        else if (this.userTime.minute < 10) {
            /** @type {?} */
            var tt = '0' + String(this.userTime.minute);
            return hour + ":" + tt + " " + meriden;
        }
        else {
            return hour + ":" + this.userTime.minute + " " + meriden;
        }
    };
    /**
     * @return {?}
     */
    MaterialTimePickerComponent.prototype.showPicker = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var dialogRef = this.dialog.open(WTimeDialogComponent, {
            data: {
                time: {
                    hour: this.userTime.hour,
                    minute: this.userTime.minute,
                    meriden: this.userTime.meriden,
                    format: this.userTime.format
                },
                color: this.color,
                revertLabel: this.revertLabel,
                submitLabel: this.submitLabel
            }
        });
        dialogRef.afterClosed().subscribe(function (result) {
            // result will be update userTime object or -1 or undefined (closed dialog w/o clicking cancel)
            if (result === undefined) {
                return;
            }
            else if (result !== -1) {
                _this.userTime = result;
                /** @type {?} */
                var hour = result.hour;
                /** @type {?} */
                var minute = result.minute;
                /** @type {?} */
                var dataEvent = {
                    hour: Utils.formatHour(result.format, hour),
                    minute: Utils.formatMinute(minute),
                    meriden: _this.userTime.meriden,
                    format: _this.userTime.format
                };
                _this.emitChange(dataEvent);
            }
        });
        return false;
    };
    /**
     * @param {?} data
     * @return {?}
     */
    MaterialTimePickerComponent.prototype.emitChange = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        this.change.emit(data);
    };
    MaterialTimePickerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'material-timepicker',
                    template: "<div fxFlex fxLayout=\"row\" class=\"w-mat-timepicker\">\n  <mat-form-field fxFlex class=\"timeContainer\" appearance=\"{{appearance}}\">\n      <mat-label>{{ label }}</mat-label>\n      <input matInput class=\"timeInput\" placeholder=\"Selec time\" id=\"time_Control\" name=\"time_Control\" [value]=\"time()\">\n      <mat-icon matSuffix (click)=\"showPicker()\">access_time</mat-icon>\n  </mat-form-field>\n</div>\n",
                    styles: [".time-picker-button{padding:0;margin:0;min-width:44px}"]
                }] }
    ];
    /** @nocollapse */
    MaterialTimePickerComponent.ctorParameters = function () { return [
        { type: MatDialog }
    ]; };
    MaterialTimePickerComponent.propDecorators = {
        label: [{ type: Input }],
        appearance: [{ type: Input }],
        userTime: [{ type: Input }],
        color: [{ type: Input }],
        revertLabel: [{ type: Input }],
        submitLabel: [{ type: Input }],
        change: [{ type: Output }]
    };
    return MaterialTimePickerComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
var WTimeComponent = /** @class */ (function () {
    function WTimeComponent() {
        this.userTimeChange = new EventEmitter();
        this.onRevert = new EventEmitter();
        this.onSubmit = new EventEmitter();
        this.VIEW_HOURS = CLOCK_TYPE.HOURS;
        this.VIEW_MINUTES = CLOCK_TYPE.MINUTES;
        this.currentView = this.VIEW_HOURS;
    }
    /**
     * @return {?}
     */
    WTimeComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (!this.userTime) {
            this.userTime = {
                hour: 6,
                minute: 0,
                meriden: 'PM',
                format: 12
            };
        }
        if (!this.revertLabel) {
            this.revertLabel = 'Cancel';
        }
        if (!this.submitLabel) {
            this.submitLabel = 'Okay';
        }
    };
    /**
     * @param {?} format
     * @param {?} hour
     * @return {?}
     */
    WTimeComponent.prototype.formatHour = /**
     * @param {?} format
     * @param {?} hour
     * @return {?}
     */
    function (format, hour) {
        return Utils.formatHour(format, hour);
    };
    /**
     * @param {?} minute
     * @return {?}
     */
    WTimeComponent.prototype.formatMinute = /**
     * @param {?} minute
     * @return {?}
     */
    function (minute) {
        return Utils.formatMinute(minute);
    };
    /**
     * @param {?} type
     * @return {?}
     */
    WTimeComponent.prototype.setCurrentView = /**
     * @param {?} type
     * @return {?}
     */
    function (type) {
        this.currentView = type;
    };
    /**
     * @param {?} m
     * @return {?}
     */
    WTimeComponent.prototype.setMeridien = /**
     * @param {?} m
     * @return {?}
     */
    function (m) {
        this.userTime.meriden = m;
    };
    /**
     * @return {?}
     */
    WTimeComponent.prototype.revert = /**
     * @return {?}
     */
    function () {
        this.onRevert.emit();
    };
    /**
     * @return {?}
     */
    WTimeComponent.prototype.submit = /**
     * @return {?}
     */
    function () {
        this.onSubmit.emit(this.userTime);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    WTimeComponent.prototype.emituserTimeChange = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.userTimeChange.emit(this.userTime);
    };
    WTimeComponent.decorators = [
        { type: Component, args: [{
                    selector: 'w-time',
                    template: "<div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutAlign=\"center center\" class=\"w-time\" [ngClass.xs]=\"'vertical-time'\" [ngClass.sm]=\"'vertical-time'\">\n  <mat-toolbar fxLayout=\"column\"  fxLayout.lt-md=\"row\" fxLayoutAlign=\"center center\" [color]=\"color\" class=\"w-timepicker-time-container\">\n\n      <div class=\"w-timepicker-selected-time\">\n          <span [class]=\"currentView === VIEW_HOURS ? 'active': ''\" (click)=\"setCurrentView(VIEW_HOURS)\">{{ formatHour(userTime.format, userTime.hour) }}:</span>\n          <span [class]=\"currentView === VIEW_MINUTES ? 'active': ''\" (click)=\"setCurrentView(VIEW_MINUTES)\">{{ formatMinute(userTime.minute) }}</span>\n      </div>\n      <div fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"w-timepicker-selected-ampm\" *ngIf=\"userTime.format === 12\">\n          <span (click)=\"setMeridien('AM')\" [class]=\"userTime.meriden === 'AM' ? 'active' : ''\">AM</span>\n          <span (click)=\"setMeridien('PM')\" [class]=\"userTime.meriden === 'PM' ? 'active' : ''\">PM</span>\n      </div>\n\n  </mat-toolbar>\n\n  <div fxLayout=\"column\" fxLayoutAlign=\"space-between center\" class=\"w-time-content\">\n      <w-clock [color]=\"color\" class=\"w-animation-zoom\" [userTime]=\"userTime\" (userTimeChange)=\"emituserTimeChange($event)\" [(currentView)]=\"currentView\" (viewChange)=\"setCurrentView($event)\"></w-clock>\n\n      <div fxFlexAlign=\"end\">\n          <button mat-button (click)=\"revert()\">{{revertLabel}}</button>\n          <button mat-button [color]=\"color\" (click)=\"submit()\">{{submitLabel}}</button>\n      </div>\n  </div>\n</div>\n",
                    styles: [":host{display:block}.w-time{max-height:100%;min-height:350px;height:350px}.w-time .w-timepicker-time-container{padding:15px;min-width:160px;width:160px}.w-time .w-timepicker-time-container.mat-toolbar-single-row{height:100%}.w-time .w-timepicker-selected-time{font-size:3.5rem;font-weight:400;display:flex}.w-time .w-timepicker-selected-ampm{font-size:1rem;line-height:1.3rem;padding-top:2rem}.w-time .w-time-content{width:100%;height:100%;padding:6px}.w-time .w-time-content w-clock{padding:12px 0;height:calc(100% - 58px)}.w-time.vertical-time{height:auto}.w-time.vertical-time .w-timepicker-time-container{min-width:auto;width:100%;height:100px}.w-time.vertical-time .w-timepicker-time-container .w-timepicker-selected-ampm{padding:0 12px}.w-timepicker-selected-ampm>span,.w-timepicker-selected-time>span{outline:0;opacity:.5}.w-timepicker-selected-ampm>span:not(.active),.w-timepicker-selected-time>span:not(.active){cursor:pointer}.w-timepicker-selected-ampm>span.active,.w-timepicker-selected-time>span.active{opacity:1}.w-animate-next{opacity:0;-webkit-transform:translate3d(50%,0,1px);transform:translate3d(50%,0,1px)}.w-animate-next-remove{transition:.5s cubic-bezier(.35,0,.25,1);opacity:0;-webkit-transform:translate3d(50%,0,1px);transform:translate3d(50%,0,1px)}.w-animate-next-remove-active{opacity:1;-webkit-transform:translate3d(0,0,1px);transform:translate3d(0,0,1px)}.w-animate-prev{opacity:0;-webkit-transform:translate3d(-50%,0,1px);transform:translate3d(-50%,0,1px)}.w-animate-prev-remove{transition:.3s cubic-bezier(.35,0,.25,1);opacity:0;-webkit-transform:translate3d(-50%,0,1px);transform:translate3d(-50%,0,1px)}.w-animate-prev-remove-active{opacity:1;-webkit-transform:translate3d(0,0,1px);transform:translate3d(0,0,1px)}@-webkit-keyframes w-animation-bounce{from{opacity:0;-webkit-transform:scale(.95);transform:scale(.95)}70%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes w-animation-bounce{from{opacity:0;-webkit-transform:scale(.95);transform:scale(.95)}70%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}to{-webkit-transform:scale(1);transform:scale(1)}}.w-animation-zoom.ng-enter{transition:.3s cubic-bezier(.35,0,.25,1);-webkit-animation-duration:.3s;animation-duration:.3s;-webkit-animation-name:w-animation-bounce;animation-name:w-animation-bounce}"]
                }] }
    ];
    /** @nocollapse */
    WTimeComponent.ctorParameters = function () { return []; };
    WTimeComponent.propDecorators = {
        userTime: [{ type: Input }],
        userTimeChange: [{ type: Output }],
        revertLabel: [{ type: Input }],
        submitLabel: [{ type: Input }],
        onRevert: [{ type: Output }],
        onSubmit: [{ type: Output }],
        color: [{ type: Input }]
    };
    return WTimeComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
var MaterialTimePickerModule = /** @class */ (function () {
    function MaterialTimePickerModule() {
    }
    MaterialTimePickerModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        MaterialTimePickerComponent,
                        WTimeDialogComponent,
                        WClockComponent,
                        WTimeComponent,
                    ],
                    imports: [
                        MatButtonModule,
                        MatButtonToggleModule,
                        MatDialogModule,
                        MatFormFieldModule,
                        MatIconModule,
                        MatInputModule,
                        MatSelectModule,
                        MatToolbarModule,
                        CommonModule,
                        FormsModule,
                        FlexLayoutModule,
                    ],
                    exports: [
                        MaterialTimePickerComponent,
                        WTimeDialogComponent,
                        WClockComponent,
                        WTimeComponent,
                    ],
                    entryComponents: [
                        MaterialTimePickerComponent,
                        WTimeDialogComponent,
                        WClockComponent,
                        WTimeComponent,
                    ]
                },] }
    ];
    return MaterialTimePickerModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */

export { MaterialTimePickerModule, MaterialTimePickerComponent as ɵa, WClockComponent as ɵc, WTimeDialogComponent as ɵb, WTimeComponent as ɵd };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,