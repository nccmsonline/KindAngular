/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { MatDialog } from '@angular/material';
import { WTimeDialogComponent } from '../w-time-dialog/w-time-dialog.component';
import { Utils } from '../utils';
var MaterialTimePickerComponent = /** @class */ (function () {
    function MaterialTimePickerComponent(dialog) {
        this.dialog = dialog;
        this.label = 'Hour';
        this.appearance = 'legacy';
        this.change = new EventEmitter();
    }
    /**
     * @return {?}
     */
    MaterialTimePickerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (!this.userTime) {
            this.userTime = {
                hour: 0,
                minute: 0,
                meriden: 'PM',
                format: 24
            };
        }
    };
    /**
     * @return {?}
     */
    MaterialTimePickerComponent.prototype.time = /**
     * @return {?}
     */
    function () {
        if (!this.userTime) {
            return '';
        }
        /** @type {?} */
        var meriden = "" + this.userTime.meriden;
        if (this.userTime.format === 24) {
            meriden = '';
        }
        /** @type {?} */
        var hour = "" + this.userTime.hour;
        if (this.userTime.hour === 24) {
            hour = '00';
        }
        if (this.userTime.minute === 0) {
            return hour + ":00 " + meriden;
        }
        else if (this.userTime.minute < 10) {
            /** @type {?} */
            var tt = '0' + String(this.userTime.minute);
            return hour + ":" + tt + " " + meriden;
        }
        else {
            return hour + ":" + this.userTime.minute + " " + meriden;
        }
    };
    /**
     * @return {?}
     */
    MaterialTimePickerComponent.prototype.showPicker = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var dialogRef = this.dialog.open(WTimeDialogComponent, {
            data: {
                time: {
                    hour: this.userTime.hour,
                    minute: this.userTime.minute,
                    meriden: this.userTime.meriden,
                    format: this.userTime.format
                },
                color: this.color,
                revertLabel: this.revertLabel,
                submitLabel: this.submitLabel
            }
        });
        dialogRef.afterClosed().subscribe(function (result) {
            // result will be update userTime object or -1 or undefined (closed dialog w/o clicking cancel)
            if (result === undefined) {
                return;
            }
            else if (result !== -1) {
                _this.userTime = result;
                /** @type {?} */
                var hour = result.hour;
                /** @type {?} */
                var minute = result.minute;
                /** @type {?} */
                var dataEvent = {
                    hour: Utils.formatHour(result.format, hour),
                    minute: Utils.formatMinute(minute),
                    meriden: _this.userTime.meriden,
                    format: _this.userTime.format
                };
                _this.emitChange(dataEvent);
            }
        });
        return false;
    };
    /**
     * @param {?} data
     * @return {?}
     */
    MaterialTimePickerComponent.prototype.emitChange = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        this.change.emit(data);
    };
    MaterialTimePickerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'material-timepicker',
                    template: "<div fxFlex fxLayout=\"row\" class=\"w-mat-timepicker\">\n  <mat-form-field fxFlex class=\"timeContainer\" appearance=\"{{appearance}}\">\n      <mat-label>{{ label }}</mat-label>\n      <input matInput class=\"timeInput\" placeholder=\"Selec time\" id=\"time_Control\" name=\"time_Control\" [value]=\"time()\">\n      <mat-icon matSuffix (click)=\"showPicker()\">access_time</mat-icon>\n  </mat-form-field>\n</div>\n",
                    styles: [".time-picker-button{padding:0;margin:0;min-width:44px}"]
                }] }
    ];
    /** @nocollapse */
    MaterialTimePickerComponent.ctorParameters = function () { return [
        { type: MatDialog }
    ]; };
    MaterialTimePickerComponent.propDecorators = {
        label: [{ type: Input }],
        appearance: [{ type: Input }],
        userTime: [{ type: Input }],
        color: [{ type: Input }],
        revertLabel: [{ type: Input }],
        submitLabel: [{ type: Input }],
        change: [{ type: Output }]
    };
    return MaterialTimePickerComponent;
}());
export { MaterialTimePickerComponent };
if (false) {
    /** @type {?} */
    MaterialTimePickerComponent.prototype.label;
    /** @type {?} */
    MaterialTimePickerComponent.prototype.appearance;
    /** @type {?} */
    MaterialTimePickerComponent.prototype.userTime;
    /** @type {?} */
    MaterialTimePickerComponent.prototype.color;
    /** @type {?} */
    MaterialTimePickerComponent.prototype.revertLabel;
    /** @type {?} */
    MaterialTimePickerComponent.prototype.submitLabel;
    /** @type {?} */
    MaterialTimePickerComponent.prototype.change;
    /** @type {?} */
    MaterialTimePickerComponent.prototype.dialog;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0ZXJpYWwtdGltZXBpY2tlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AY2FuZGlkb3NhbGVzL21hdGVyaWFsLXRpbWUtcGlja2VyLyIsInNvdXJjZXMiOlsibGliL21hdGVyaWFsLXRpbWVwaWNrZXIvbWF0ZXJpYWwtdGltZXBpY2tlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsWUFBWSxFQUNaLEtBQUssRUFFTCxNQUFNLEVBQ0wsTUFBTSxlQUFlLENBQUM7QUFFekIsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDBDQUEwQyxDQUFDO0FBQ2hGLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFHakM7SUFpQkUscUNBQW9CLE1BQWlCO1FBQWpCLFdBQU0sR0FBTixNQUFNLENBQVc7UUFYNUIsVUFBSyxHQUFHLE1BQU0sQ0FBQztRQUNmLGVBQVUsR0FBRyxRQUFRLENBQUM7UUFNckIsV0FBTSxHQUF3QixJQUFJLFlBQVksRUFBUyxDQUFDO0lBSTFCLENBQUM7Ozs7SUFFekMsOENBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDbEIsSUFBSSxDQUFDLFFBQVEsR0FBRztnQkFDZCxJQUFJLEVBQUUsQ0FBQztnQkFDUCxNQUFNLEVBQUUsQ0FBQztnQkFDVCxPQUFPLEVBQUUsSUFBSTtnQkFDYixNQUFNLEVBQUUsRUFBRTthQUNYLENBQUM7U0FDSDtJQUNILENBQUM7Ozs7SUFFRCwwQ0FBSTs7O0lBQUo7UUFDRSxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNsQixPQUFPLEVBQUUsQ0FBQztTQUNYOztZQUVHLE9BQU8sR0FBRyxLQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBUztRQUN4QyxJQUFJLElBQUksQ0FBQyxR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QUN0Qyw0Q0FBd0I7O0lBQ3hCLGlEQUErQjs7SUFDL0IsK0NBQXlCOztJQUN6Qiw0Q0FBdUI7O0lBQ3ZCLGtEQUE2Qjs7SUFDN0Isa0RBQTZCOztJQUU3Qiw2Q0FBa0U7O0lBSXRELDZDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgRXZlbnRFbWl0dGVyLFxuICBJbnB1dCxcbiAgT25Jbml0LFxuICBPdXRwdXRcbiAgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElUaW1lIH0gZnJvbSAnLi4vdy1jbG9jay93LWNsb2NrLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBNYXREaWFsb2cgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbCc7XG5pbXBvcnQgeyBXVGltZURpYWxvZ0NvbXBvbmVudCB9IGZyb20gJy4uL3ctdGltZS1kaWFsb2cvdy10aW1lLWRpYWxvZy5jb21wb25lbnQnO1xuaW1wb3J0IHsgVXRpbHMgfSBmcm9tICcuLi91dGlscyc7XG5cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbWF0ZXJpYWwtdGltZXBpY2tlcicsXG4gIHN0eWxlVXJsczogWycuL21hdGVyaWFsLXRpbWVwaWNrZXIuY29tcG9uZW50LnNjc3MnXSxcbiAgdGVtcGxhdGVVcmw6ICcuL21hdGVyaWFsLXRpbWVwaWNrZXIuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIE1hdGVyaWFsVGltZVBpY2tlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpIGxhYmVsID0gJ0hvdXInO1xuICBASW5wdXQoKSBhcHBlYXJhbmNlID0gJ2xlZ2FjeSc7XG4gIEBJbnB1dCgpIHVzZXJUaW1lOiBJVGltZTtcbiAgQElucHV0KCkgY29sb3I6IHN0cmluZztcbiAgQElucHV0KCkgcmV2ZXJ0TGFiZWw6IHN0cmluZztcbiAgQElucHV0KCkgc3VibWl0TGFiZWw6IHN0cmluZztcblxuICBAT3V0cHV0KCkgY2hhbmdlOiBFdmVudEVtaXR0ZXI8SVRpbWU+ID0gbmV3IEV2ZW50RW1pdHRlcjxJVGltZT4oKTtcblxuXG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBkaWFsb2c6IE1hdERpYWxvZykge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICBpZiAoIXRoaXMudXNlclRpbWUpIHtcbiAgICAgIHRoaXMudXNlclRpbWUgPSB7XG4gICAgICAgIGhvdXI6IDAsXG4gICAgICAgIG1pbnV0ZTogMCxcbiAgICAgICAgbWVyaWRlbjogJ1BNJyxcbiAgICAgICAgZm9ybWF0OiAyNFxuICAgICAgfTtcbiAgICB9XG4gIH1cblxuICB0aW1lKCk6IHN0cmluZyB7XG4gICAgaWYgKCF0aGlzLnVzZXJUaW1lKSB7XG4gICAgICByZXR1cm4gJyc7XG4gICAgfVxuXG4gICAgbGV0IG1lcmlkZW4gPSBgJHt0aGlzLnVzZXJUaW1lLm1lcmlkZW59YDtcbiAgICBpZiAodGhpcy51c2VyVGltZS5mb3JtYXQgPT09IDI0KSB7XG4gICAgICBtZXJpZGVuID0gJyc7XG4gICAgfVxuXG4gICAgbGV0IGhvdXIgPSBgJHt0aGlzLnVzZXJUaW1lLmhvdXJ9YDtcbiAgICBpZiAodGhpcy51c2VyVGltZS5ob3VyID09PSAyNCkge1xuICAgICAgaG91ciA9ICcwMCc7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMudXNlclRpbWUubWludXRlID09PSAwKSB7XG4gICAgICByZXR1cm4gYCR7aG91cn06MDAgJHttZXJpZGVufWA7XG4gICAgfSBlbHNlIGlmICh0aGlzLnVzZXJUaW1lLm1pbnV0ZSA8IDEwKSB7XG4gICAgICBjb25zdCB0dCA9ICcwJyArIFN0cmluZyh0aGlzLnVzZXJUaW1lLm1pbnV0ZSk7XG4gICAgICByZXR1cm4gYCR7aG91cn06JHt0dH0gJHttZXJpZGVufWA7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBgJHtob3VyfToke3RoaXMudXNlclRpbWUubWludXRlfSAke21lcmlkZW59YDtcbiAgICB9XG4gIH1cblxuICBzaG93UGlja2VyKCkge1xuICAgIGNvbnN0IGRpYWxvZ1JlZiA9IHRoaXMuZGlhbG9nLm9wZW4oV1RpbWVEaWFsb2dDb21wb25lbnQsIHtcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgdGltZToge1xuICAgICAgICAgIGhvdXI6IHRoaXMudXNlclRpbWUuaG91cixcbiAgICAgICAgICBtaW51dGU6IHRoaXMudXNlclRpbWUubWludXRlLFxuICAgICAgICAgIG1lcmlkZW46IHRoaXMudXNlclRpbWUubWVyaWRlbixcbiAgICAgICAgICBmb3JtYXQ6IHRoaXMudXNlclRpbWUuZm9ybWF0XG4gICAgICAgIH0sXG4gICAgICAgIGNvbG9yOiB0aGlzLmNvbG9yLFxuICAgICAgICByZXZlcnRMYWJlbDogdGhpcy5yZXZlcnRMYWJlbCxcbiAgICAgICAgc3VibWl0TGFiZWw6IHRoaXMuc3VibWl0TGFiZWxcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIGRpYWxvZ1JlZi5hZnRlckNsb3NlZCgpLnN1YnNjcmliZSgocmVzdWx0OiBJVGltZSB8IC0xKSA9PiB7XG4gICAgICAvLyByZXN1bHQgd2lsbCBiZSB1cGRhdGUgdXNlclRpbWUgb2JqZWN0IG9yIC0xIG9yIHVuZGVmaW5lZCAoY2xvc2VkIGRpYWxvZyB3L28gY2xpY2tpbmcgY2FuY2VsKVxuICAgICAgaWYgKHJlc3VsdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH0gZWxzZSBpZiAocmVzdWx0ICE9PSAtMSkge1xuICAgICAgICB0aGlzLnVzZXJUaW1lID0gcmVzdWx0O1xuXG4gICAgICAgIGNvbnN0IGhvdXIgPSByZXN1bHQuaG91cjtcbiAgICAgICAgY29uc3QgbWludXRlID0gcmVzdWx0Lm1pbnV0ZTtcblxuICAgICAgICBjb25zdCBkYXRhRXZlbnQgPSB7XG4gICAgICAgICAgaG91cjogVXRpbHMuZm9ybWF0SG91cihyZXN1bHQuZm9ybWF0LCBob3VyKSxcbiAgICAgICAgICBtaW51dGU6IFV0aWxzLmZvcm1hdE1pbnV0ZShtaW51dGUpLFxuICAgICAgICAgIG1lcmlkZW46IHRoaXMudXNlclRpbWUubWVyaWRlbixcbiAgICAgICAgICBmb3JtYXQ6IHRoaXMudXNlclRpbWUuZm9ybWF0XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuZW1pdENoYW5nZShkYXRhRXZlbnQpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHByaXZhdGUgZW1pdENoYW5nZShkYXRhKSB7XG4gICAgdGhpcy5jaGFuZ2UuZW1pdChkYXRhKTtcbiAgfVxufVxuIl19