/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
/** @enum {number} */
var CLOCK_TYPE = {
    HOURS: 1,
    MINUTES: 2,
};
export { CLOCK_TYPE };
CLOCK_TYPE[CLOCK_TYPE.HOURS] = 'HOURS';
CLOCK_TYPE[CLOCK_TYPE.MINUTES] = 'MINUTES';
/**
 * @record
 */
export function ITime() { }
if (false) {
    /** @type {?} */
    ITime.prototype.hour;
    /** @type {?} */
    ITime.prototype.minute;
    /** @type {?} */
    ITime.prototype.meriden;
    /** @type {?} */
    ITime.prototype.format;
}
var WClockComponent = /** @class */ (function () {
    function WClockComponent() {
        this.userTimeChange = new EventEmitter();
        this.viewChange = new EventEmitter();
        this.steps = new Array();
    }
    /**
     * @return {?}
     */
    WClockComponent.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        this.setupUI();
    };
    /**
     * @return {?}
     */
    WClockComponent.prototype.setupUI = /**
     * @return {?}
     */
    function () {
        this.steps = new Array();
        switch (this.currentView) {
            case CLOCK_TYPE.HOURS:
                for (var i = 1; i <= this.userTime.format; i++) {
                    this.steps.push(i);
                    this.selectedTimePart = this.userTime.hour || 0;
                    if (this.selectedTimePart > this.userTime.format) {
                        this.selectedTimePart -= this.userTime.format;
                    }
                }
                break;
            case CLOCK_TYPE.MINUTES:
                for (var i = 5; i <= 55; i += 5) {
                    this.steps.push(i);
                }
                this.steps.push(0);
                this.selectedTimePart = this.userTime.minute || 0;
                break;
        }
    };
    /**
     * @return {?}
     */
    WClockComponent.prototype.getPointerStyle = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var divider = 1;
        switch (this.currentView) {
            case CLOCK_TYPE.HOURS:
                divider = this.userTime.format;
                break;
            case CLOCK_TYPE.MINUTES:
                divider = 60;
                break;
        }
        /** @type {?} */
        var degrees = 0;
        if (this.currentView === CLOCK_TYPE.HOURS) {
            degrees = Math.round(this.userTime.hour * (360 / divider)) - 180;
        }
        else {
            degrees = Math.round(this.userTime.minute * (360 / divider)) - 180;
        }
        /** @type {?} */
        var style = {
            '-webkit-transform': 'rotate(' + degrees + 'deg)',
            '-ms-transform': 'rotate(' + degrees + 'deg)',
            transform: 'rotate(' + degrees + 'deg)'
        };
        return style;
    };
    /**
     * @param {?} step
     * @param {?} index
     * @return {?}
     */
    WClockComponent.prototype.getTimeValueClass = /**
     * @param {?} step
     * @param {?} index
     * @return {?}
     */
    function (step, index) {
        if (this.currentView === CLOCK_TYPE.HOURS) {
            this.STEP_DEG = 360 / this.userTime.format;
        }
        else {
            this.STEP_DEG = 360 / 12;
        }
        /** @type {?} */
        var classes = 'w-clock-step w-clock-deg' + this.STEP_DEG * (index + 1);
        if (this.selectedTimePart === step) {
            classes += ' mat-primary';
        }
        return classes;
    };
    /**
     * @param {?} step
     * @return {?}
     */
    WClockComponent.prototype.changeTimeValue = /**
     * @param {?} step
     * @return {?}
     */
    function (step) {
        if (this.currentView === CLOCK_TYPE.HOURS) {
            this.userTime.hour = step;
            // auto switch to minutes
            this.viewChange.emit(CLOCK_TYPE.MINUTES);
        }
        else {
            this.userTime.minute = step;
            // auto switch to hours
            this.viewChange.emit(CLOCK_TYPE.HOURS);
        }
        this.userTimeChange.emit(this.userTime);
    };
    WClockComponent.decorators = [
        { type: Component, args: [{
                    selector: 'w-clock',
                    template: "<div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"w-clock-wrapper\">\n    <div class=\"w-clock\">\n        <div class=\"w-clock-container\">\n            \n            <!-- Clock center -->\n            <button  mat-mini-fab [color]=\"color\" class=\"w-clock-center\"></button>\n\n            <!-- Clock hand -->\n            <mat-toolbar [ngStyle]=\"getPointerStyle()\" [color]=\"color\" class=\"w-pointer\">\n                <button mat-mini-fab [color]=\"color\" class=\"w-clock-selected\"></button>\n            </mat-toolbar>\n            \n            <!-- Hour / Minute number faces -->\n            <div *ngFor=\"let step of steps; let i = index\" [class]=\"getTimeValueClass(step, i)\" >\n                <button mat-mini-fab\n                    [color]=\"selectedTimePart === step ? color : ''\"\n                    (click)=\"changeTimeValue(step)\">\n                    {{ step }}\n                </button>\n            </div>\n\n        </div>\n    </div>\n</div>",
                    styles: [".w-clock-wrapper{height:100%;padding:0 24px}.w-clock-wrapper .w-clock{width:200px;height:200px;border-radius:50%;cursor:pointer;padding:24px;background:#ededed}.w-clock-wrapper .w-clock .w-clock-container{width:100%;height:100%;position:relative;display:block}.w-clock-wrapper .w-clock .w-clock-center{height:6px;width:6px;position:absolute;left:0;right:0;top:0;bottom:0;margin:auto;border-radius:50%}.w-clock-wrapper .w-clock .w-pointer{box-shadow:none;width:1px;height:50%;position:absolute;left:0;right:0;bottom:0;margin:0 auto;padding:0;-webkit-transform-origin:top center;transform-origin:top center;transition:transform .2s;transition:transform .2s,-webkit-transform .2s;z-index:0;pointer-events:none}.w-clock-wrapper .w-clock .w-clock-step{display:block;position:absolute;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);transition:transform .2s;transition:transform .2s,-webkit-transform .2s}.w-clock-wrapper .w-clock .w-clock-step .mat-mini-fab{box-shadow:none;background-color:transparent}.w-clock-wrapper .w-clock .w-clock-selected{position:absolute;bottom:-19px;left:-19px;min-width:0;min-height:0;pointer-events:none;box-shadow:none;cursor:none}.w-clock-deg0{top:0;left:50%}.w-clock-deg15{top:1.70370869%;left:62.94095226%}.w-clock-deg30{top:6.69872981%;left:75%}.w-clock-deg45{top:14.64466094%;left:85.35533905%}.w-clock-deg60{top:25%;left:93.30127019%}.w-clock-deg75{top:37.05904774%;left:98.29629131%}.w-clock-deg90{top:50%;left:100%}.w-clock-deg105{top:62.94095226%;left:98.29629131%}.w-clock-deg120{top:75%;left:93.30127019%}.w-clock-deg135{top:85.35533906%;left:85.35533906%}.w-clock-deg150{top:93.30127019%;left:75%}.w-clock-deg165{top:98.29629131%;left:62.94095226%}.w-clock-deg180{top:100%;left:50%}.w-clock-deg195{top:98.29629131%;left:37.05904774%}.w-clock-deg210{top:93.30127019%;left:25%}.w-clock-deg225{top:85.35533906%;left:14.64466094%}.w-clock-deg240{top:75%;left:6.69872981%}.w-clock-deg255{top:62.94095226%;left:1.703708686%}.w-clock-deg270{top:50%;left:0}.w-clock-deg285{top:37.05904774%;left:1.703708686%}.w-clock-deg300{top:25%;left:6.69872981%}.w-clock-deg315{top:14.64466094%;left:14.64466094%}.w-clock-deg330{top:6.69872981%;left:25%}.w-clock-deg345{top:1.703708686%;left:37.05904774%}.w-clock-deg360{top:0;left:50%}"]
                }] }
    ];
    WClockComponent.propDecorators = {
        userTime: [{ type: Input }],
        userTimeChange: [{ type: Output }],
        currentView: [{ type: Input }],
        viewChange: [{ type: Output }],
        color: [{ type: Input }]
    };
    return WClockComponent;
}());
export { WClockComponent };
if (false) {
    /** @type {?} */
    WClockComponent.prototype.userTime;
    /** @type {?} */
    WClockComponent.prototype.userTimeChange;
    /** @type {?} */
    WClockComponent.prototype.currentView;
    /** @type {?} */
    WClockComponent.prototype.viewChange;
    /** @type {?} */
    WClockComponent.prototype.color;
    /** @type {?} */
    WClockComponent.prototype.steps;
    /** @type {?} */
    WClockComponent.prototype.selectedTimePart;
    /** @type {?} */
    WClockComponent.prototype.STEP_DEG;
}
//# sourceMappingURL=data:application/json;base64,